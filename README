A file syncer developed in Python.

I lost a hard drive with all my old programming stuff on there, so I wanted to prevent that from happening again.

I also have three machines that I program on, so I want to be able to have all my scripts available to me with whatever machine I'm working on.

There are lots of bugs to still work out, and I'm currently using rsync to transfer data (sorry windows), but I'd like to rewrite these portions in python.

It watches a folder, looks for changes, and syncs them to a drive. Because it uses rsync to transfer the files, you can do lots of stuff with it.

I realize now that many of the features I attempted to implement are easily implemented with rsync switches, but it's fun to make your own stuff.

One of the current problems is oscillation, when two systems are running grabSphere.py, and one updates the file, this file gets synced to the shared drive.
The other system then tries to copy the file, this is now newer than the file on the shared drive, and then it starts pushing that file between the computers.

TODO:

Fix oscillation.

Windows / Mac support (develop rsync commands in Python)

Try to implement some local delta-transfer to see if it's faster.
